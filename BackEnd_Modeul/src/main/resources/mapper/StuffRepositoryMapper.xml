<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.modeul.web.repository.StuffRepository">
	<resultMap id="stuffResultMap" type="Stuff">
		<result property="numPeople" column="num_people" />
		<result property="regDate" column="reg_date" />
		<result property="categoryId" column="category_id" />
		<result property="memberId" column="member_id" />
		<result property="coordX" column="coord_x" />
		<result property="coordY" column="coord_y" />
		<result property="dongCode" column="dong_code" />
	</resultMap>

	<resultMap id="stuffViewResultMap" type="StuffView">
		<result property="imageName" column="image_name" />
		<result property="categoryId" column="category_id" />
		<result property="categoryName" column="category_name" />
		<result property="numPeople" column="num_people" />
		<result property="memberId" column="member_id" />
		<result property="regDate" column="reg_date" />
		<result property="participantCount" column="participation_count" />
		<result property="coordX" column="coord_x" />
		<result property="coordY" column="coord_y" />
		<result property="dongCode" column="dong_code" />
	</resultMap>
	
	<resultMap id="ImageResultMap" type="Image">
		<result property="stuffId" column="stuff_id" />
	</resultMap>

	<select id="findbyId" resultMap="stuffResultMap">
		select *
		from stuff
		where id = #{id}
	</select>

	<select id="findViewbyId" resultMap="stuffViewResultMap">
		select *
		from stuff_view
		where id = #{id}
	</select>

	<select id="findViewAll" resultMap="stuffViewResultMap">
		select *
		from stuff_view
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="query != null">
				title like '%${query}%'
			</if>
			<if test="categoryId != null">
				and category_id = #{categoryId}
			</if>
			<if test="memberId != null">
				and member_id = #{memberId}
			</if>
			<if test="dongCode != null">
				and dong_code = #{dongCode}
			</if>
		</trim>
		<if test="orderField != null and orderDir != null">
			order by ${orderField} ${orderDir}
		</if>

		<if test="size != null and offset != null">
			limit ${size} offset ${offset}
		</if>
	</select>
	
	<select id="findViewBy" resultMap="stuffViewResultMap">
		select *
		from stuff_view
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="query != null">
				title like '%${query}%'
			</if>
		</trim>
		<if test="orderField != null and orderDir != null">
			order by ${orderField} ${orderDir}
		</if>

		<if test="size != null and offset != null">
			limit ${size} offset ${offset}
		</if>
	</select>


	<select id="getCountList" resultType="Long" parameterType="StuffView">
		select count(id)
		from
		stuff_view
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="categoryId != null">
				category_id = #{categoryId}
			</if>
			<if test="memberId != null">
				and member_id = #{memberId}
			</if>
			<if test="query != null">
				and title like '%${query}%'
			</if>
		</trim>
	</select>

	<!-- 공구상품글 등록  -->
	<insert id="insert" parameterType="Stuff">
		insert into stuff(title, place, num_people, deadline, price, url,
		content, category_id, coord_x, coord_y, dong_code, member_id)
		values(#{title},#{place},#{numPeople},#{deadline},#{price},#{url},#{content}, #{categoryId}, #{coordX}, #{coordY}, #{dongCode}, #{memberId})
		<selectKey resultType="long" keyProperty="id" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>

	<insert id="uploadImage" parameterType="Image">
   			insert into image(name, stuff_id)
    		values(#{name}, #{stuffId})
	</insert>
	<insert id="uploadImgurl" parameterType="Image">
    		insert into image(name, stuff_id)
    		values(#{imgurl}, #{stuffId})
	</insert>

	<!-- 상품 정보 수정, 나중에 categoryId 추가하기!! -->
	<update id="update" parameterType="Stuff">
		update stuff set title = #{title}, place = #{place}, num_people = #{numPeople}, deadline = #{deadline}, price = #{price}, 
		url = #{url}, content = #{content}, category_id = #{categoryId}, coord_x = #{coordX}, coord_y = #{coordY}, dong_code = #{dongCode}
		where id = #{id}
	</update>

	<!-- 지정 공구상품 이미지 전체 삭제 --> 	
	<delete id="deleteImage" >			
		delete from image where stuff_id = #{stuffId}		
	</delete>

	<!-- 특정 공구상품 정보 전체 삭제 --> 	
	<delete id="delete" parameterType="Stuff">
      delete from stuff where id=${id}
   </delete>
   
   <!-- 이미지 정보 조회 -->
   <select id="findImagebyId" parameterType="Long" resultType="Image">
      select * from image where stuff_id = ${id}
   </select>
</mapper>